package com.xunyun.infanteduplatform.controller.organization;

import com.xunyun.infanteduplatform.domain.BureauInfo;
import com.xunyun.infanteduplatform.domain.LoginUserInfo;
import com.xunyun.infanteduplatform.domain.TreeEntity;
import com.xunyun.infanteduplatform.service.BureauService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.Calendar;
import java.util.List;

/**
 * Created by Administrator on 2015/11/30.
 * 单位管理Controller
 */
@Controller @RequestMapping("bureau") public class BureauController {
    @Autowired private BureauService bureauService;

    /**
     * 查询单位列表树
     *
     * @param id 单位id
     * @return List<TreeEntity> 树List
     */
    @RequestMapping(value = "/queryBureauList", method = RequestMethod.POST) public @ResponseBody
    List<TreeEntity> queryBureauList(@RequestParam(defaultValue = "0") int id) {

        return this.bureauService.queryBureauList(id);
    }

    /**
     * 查询单位基本信息
     *
     * @param bureauId 单位id
     * @return List<BureauInfo>
     */
    @RequestMapping(value = "queryBureauInfo", method = RequestMethod.POST) public @ResponseBody
    BureauInfo queryBureauInfo(@RequestParam int bureauId) {
        return this.bureauService.queryBureauInfo(bureauId);
    }

    /**
     * 添加修改单位信息
     *
     * @param bureauInfo     单位基本信息
     * @param parentBureauId 上级单位id
     * @return 保存状态
     */
    @RequestMapping(value = "saveBureauInfo", method = RequestMethod.POST) public @ResponseBody
    Integer saveBureauInfo(
        @ModelAttribute(value = "bureau") BureauInfo bureauInfo,
        @RequestParam(value = "parentBureauId", required = false) Integer parentBureauId,
        @RequestParam(value = "oldPId", required = false) Integer oldPId,
        HttpServletRequest request ) {
        int saveOrUpdate = 0;
        //取最后一个传递过来的LocationCode
        String[] lc = bureauInfo.getLocationCode().split(",");
        bureauInfo.setLocationCode(lc[lc.length-1]);
        parentBureauId = (parentBureauId == null) ? 0 : parentBureauId;
        oldPId = (oldPId == null) ? 0 : oldPId;
        HttpSession session = request.getSession();
        LoginUserInfo loginUserInfo = (LoginUserInfo) session.getAttribute("loginUserInfo");
        bureauInfo.setLastUpdatedBy(loginUserInfo.getUserid()+"");
        bureauInfo.setLastUpdateTime(Calendar.getInstance().getTime());
        bureauInfo.setDeleteFlg(0);
        if (bureauInfo.getOrganizationId() != null) {
            return this.bureauService.updateBureauInfo(bureauInfo, parentBureauId, oldPId);
        } else {
            bureauInfo.setCreatedBy(loginUserInfo.getUserid()+"");
            bureauInfo.setCreationTime(Calendar.getInstance().getTime());
            this.bureauService.saveBureauInfo(bureauInfo, parentBureauId);
        }
        return saveOrUpdate;

    }

    /**
     * 删除单位
     *
     * @param bureauId 单位Id
     * @return 删除状态
     */
    @RequestMapping(value = "deleteBureauInfo", method = RequestMethod.POST) public @ResponseBody
    Integer deleteBureauInfo(@RequestParam(value = "bureauId") Integer bureauId,
        @RequestParam(value = "parentBureauId") Integer parentBureauId) {
        return this.bureauService.deleteBureauInfo(bureauId, parentBureauId);
    }

    @RequestMapping(value = "queryBureau", method = RequestMethod.POST) public @ResponseBody
    String queryBureau(@ModelAttribute(value = "bureau") BureauInfo bureauInfo) {
        Integer counts = this.bureauService.queryBureau(bureauInfo);
        String message;
        if (counts > 0 && bureauInfo.getBureauName() != null && !""
            .equals(bureauInfo.getBureauName())) {
            message = "此单位下单位名称重复!";
        } else if (counts > 0 && bureauInfo.getOrganizationCode() != null) {
            message = "单位机构代码重复!";
        } else {
            message = "true";
        }
        return message;
    }
}
